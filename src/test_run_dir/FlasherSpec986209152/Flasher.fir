;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Flasher : 
  module Flasher : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip start : UInt<1>, light : UInt<1>}
    
    node start = bits(io.start, 0, 0) @[Flasher.scala 13:24]
    reg stateReg : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Flasher.scala 18:25]
    wire light : UInt<1>
    light <= UInt<1>("h00")
    wire timerLoad : UInt<1>
    timerLoad <= UInt<1>("h00")
    wire timerSelect : UInt<1>
    timerSelect <= UInt<1>("h01")
    wire timerDone : UInt<1> @[Flasher.scala 25:23]
    timerLoad <= timerDone @[Flasher.scala 27:13]
    node _T = eq(UInt<3>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      timerLoad <= UInt<1>("h01") @[Flasher.scala 32:17]
      timerSelect <= UInt<1>("h01") @[Flasher.scala 33:19]
      when start : @[Flasher.scala 34:20]
        stateReg <= UInt<3>("h01") @[Flasher.scala 34:31]
        skip @[Flasher.scala 34:20]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<3>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        timerSelect <= UInt<1>("h00") @[Flasher.scala 37:19]
        light <= UInt<1>("h01") @[Flasher.scala 38:13]
        when timerDone : @[Flasher.scala 39:24]
          stateReg <= UInt<3>("h02") @[Flasher.scala 39:35]
          skip @[Flasher.scala 39:24]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<3>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          when timerDone : @[Flasher.scala 42:24]
            stateReg <= UInt<3>("h03") @[Flasher.scala 42:35]
            skip @[Flasher.scala 42:24]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_3 = eq(UInt<3>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_3 : @[Conditional.scala 39:67]
            timerSelect <= UInt<1>("h00") @[Flasher.scala 45:19]
            light <= UInt<1>("h01") @[Flasher.scala 46:13]
            when timerDone : @[Flasher.scala 47:24]
              stateReg <= UInt<3>("h04") @[Flasher.scala 47:35]
              skip @[Flasher.scala 47:24]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_4 = eq(UInt<3>("h04"), stateReg) @[Conditional.scala 37:30]
            when _T_4 : @[Conditional.scala 39:67]
              when timerDone : @[Flasher.scala 50:24]
                stateReg <= UInt<3>("h05") @[Flasher.scala 50:35]
                skip @[Flasher.scala 50:24]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_5 = eq(UInt<3>("h05"), stateReg) @[Conditional.scala 37:30]
              when _T_5 : @[Conditional.scala 39:67]
                timerSelect <= UInt<1>("h00") @[Flasher.scala 53:19]
                light <= UInt<1>("h01") @[Flasher.scala 54:13]
                when timerDone : @[Flasher.scala 55:24]
                  stateReg <= UInt<3>("h00") @[Flasher.scala 55:35]
                  skip @[Flasher.scala 55:24]
                skip @[Conditional.scala 39:67]
    reg timerReg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[Flasher.scala 61:25]
    node _T_6 = eq(timerReg, UInt<1>("h00")) @[Flasher.scala 62:25]
    timerDone <= _T_6 @[Flasher.scala 62:13]
    node _T_7 = eq(timerDone, UInt<1>("h00")) @[Flasher.scala 65:8]
    when _T_7 : @[Flasher.scala 65:20]
      node _T_8 = sub(timerReg, UInt<1>("h01")) @[Flasher.scala 66:26]
      node _T_9 = tail(_T_8, 1) @[Flasher.scala 66:26]
      timerReg <= _T_9 @[Flasher.scala 66:14]
      skip @[Flasher.scala 65:20]
    when timerLoad : @[Flasher.scala 68:20]
      when timerSelect : @[Flasher.scala 69:24]
        timerReg <= UInt<3>("h05") @[Flasher.scala 70:16]
        skip @[Flasher.scala 69:24]
      else : @[Flasher.scala 71:18]
        timerReg <= UInt<2>("h03") @[Flasher.scala 72:16]
        skip @[Flasher.scala 71:18]
      skip @[Flasher.scala 68:20]
    io.light <= light @[Flasher.scala 77:12]
    
