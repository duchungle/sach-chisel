$date
2021-02-21T02:50+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module Flasher $end
 $var wire 3 ! stateReg $end
 $var wire 1 " _GEN_16 $end
 $var wire 1 # _GEN_10 $end
 $var wire 3 $ _GEN_2 $end
 $var wire 1 % _T $end
 $var wire 3 & _GEN_25 $end
 $var wire 1 ' _GEN_19 $end
 $var wire 3 ( _GEN_5 $end
 $var wire 1 ) _GEN_13 $end
 $var wire 3 * _GEN_8 $end
 $var wire 1 + timerDone $end
 $var wire 1 , timerLoad $end
 $var wire 1 - timerSelect $end
 $var wire 3 . _GEN_27 $end
 $var wire 1 / _GEN_12 $end
 $var wire 3 0 _GEN_15 $end
 $var wire 1 1 io_start $end
 $var wire 1 2 _GEN_18 $end
 $var wire 3 3 _GEN_1 $end
 $var wire 3 4 _GEN_4 $end
 $var wire 1 5 clock $end
 $var wire 3 6 _GEN_23 $end
 $var wire 3 7 timerReg $end
 $var wire 1 8 _GEN_17 $end
 $var wire 3 9 _GEN_26 $end
 $var wire 1 : _GEN_11 $end
 $var wire 3 ; _GEN_20 $end
 $var wire 3 < _GEN_14 $end
 $var wire 1 = _GEN_6 $end
 $var wire 3 > _GEN_0 $end
 $var wire 3 ? _GEN_9 $end
 $var wire 1 @ reset $end
 $var wire 1 A io_light $end
 $var wire 3 B _GEN_3 $end
$upscope $end
$enddefinitions $end
$dumpvars
0%
b000 *
0'
b000 3
0=
b000 B
0"
b000 .
b000 &
08
0#
b000 (
0:
02
b000 >
b000 !
b000 ?
05
0-
b000 9
b000 $
0/
b000 ;
b000 <
b000 4
01
0)
b000 6
0@
0+
b000 7
0A
0,
b000 0
$end
#0
b010 3
b100 B
1-
1%
b101 4
b101 .
1=
1/
1"
1@
1#
12
b101 9
b011 $
1+
1,
#1
15
#6
05
#11
15
#16
05
#21
15
#26
05
#31
15
#36
05
#41
15
#46
0@
05
#51
b000 3
b000 B
b000 4
b100 &
15
b000 $
0+
b101 7
#56
05
#61
15
#66
11
05
b001 6
b001 >
#71
b001 3
b001 B
0-
b001 <
0%
b001 4
b100 .
15
1'
b001 (
b001 !
b001 0
b001 ?
02
b001 *
b011 9
b001 $
1A
0,
b001 ;
#76
01
05
#81
b011 .
b011 &
15
b100 7
#86
05
#91
b010 .
b010 &
15
b011 7
#96
05
#101
b001 .
b001 &
15
b010 7
#106
05
#111
b000 .
b000 &
15
b001 7
#116
05
#121
b010 3
b100 B
b101 4
b011 .
15
b011 $
b010 6
1+
b000 (
b000 7
1,
b010 ;
#126
05
#131
b010 B
1-
b010 <
b010 4
b010 .
b010 &
15
0'
b010 (
b011 7
b010 >
b010 !
b010 0
b010 ?
12
b010 *
b101 9
b010 $
0+
0A
0,
#136
05
#141
b001 .
b001 &
15
b010 7
#146
05
#151
b000 .
b000 &
15
b001 7
#156
05
#161
b100 B
b011 0
b101 4
b101 .
15
b011 $
b011 6
1+
b000 (
b000 7
1,
b011 ;
#166
05
#171
b011 3
b011 B
0-
b011 <
b011 4
b100 .
b100 &
15
1'
b011 (
b101 7
0/
b011 >
1)
b011 !
b011 ?
0"
18
02
b011 *
b011 9
0+
1A
0,
#176
05
#181
b011 .
b011 &
15
b100 7
#186
05
#191
b010 .
b010 &
15
b011 7
#196
05
#201
b001 .
b001 &
15
b010 7
#206
05
#211
b000 .
b000 &
15
b001 7
#216
05
#221
b010 3
b100 B
b100 0
b100 <
b101 4
b011 .
15
b100 6
1+
b000 (
b000 7
1,
b100 ;
#226
05
#231
b100 3
1-
b100 4
b010 .
b010 &
15
0'
b100 (
b011 7
1/
b100 >
0)
b100 !
b100 ?
1"
08
12
b100 *
b101 9
b100 $
0+
0A
0,
#236
05
#241
b001 .
b001 &
15
b010 7
#246
05
#251
b000 .
b000 &
15
b001 7
#256
05
#261
b010 3
b101 <
b101 4
b101 .
15
b101 6
b000 (
b000 7
b101 0
b101 ?
b011 $
1+
1,
b101 ;
#266
05
#271
b101 3
b101 B
0-
b100 .
b100 &
15
1'
0=
b101 (
b101 7
0/
b101 >
1)
b101 !
0"
18
0#
02
b101 *
b011 9
b101 $
0+
1:
1A
0,
#276
05
#281
b011 .
b011 &
15
b100 7
#286
05
#291
b010 .
b010 &
15
b011 7
#296
05
#301
b001 .
b001 &
15
b010 7
#306
05
#311
b000 .
b000 &
15
b001 7
#316
05
#321
b010 3
b100 B
b000 <
b011 .
15
b000 6
b000 (
b000 7
b000 0
b000 ?
b000 *
b011 $
1+
1,
b000 ;
#326
05
#331
b000 3
b000 B
1-
1%
b000 4
b101 .
b010 &
15
0'
1=
b011 7
1/
b000 >
0)
b000 !
1"
08
1#
12
b101 9
b000 $
0+
0:
0A
#336
05
#341
b100 &
15
b101 7
#346
05
#351
15
#356
05
#361
15
#366
05
#371
15
#376
05
#381
15
#386
05
#391
15
#396
05
